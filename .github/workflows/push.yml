# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Continuous Testing

on:
  push:
    branches: [ master ]
  pull_request: {}

jobs:
  build:
    
    strategy:
      matrix:
        python-version: ['3.9', '3.13']
        java: [11, 24]
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        terrier: [''] # blank indicates latest
        # include:
        #     - os: 'macos-latest'
        #       python-version: '3.9'
        #       java: 11
        #       terrier: 'snapshot'

    runs-on: ${{ matrix.os }}
    steps:

    - name: Setup dependencies for xgBoost on macOs-latest
      if: matrix.os == 'macOs-latest'
      run: |
        brew install libomp

    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      if: matrix.os != 'self-hosted'
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Setup java
      if: matrix.os != 'self-hosted'
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'zulu'
    
    - name: Install Terrier snapshot
      if: matrix.terrier == '5.4-SNAPSHOT'
      run: |
        git clone https://github.com/terrier-org/terrier-core.git
        cd terrier-core
        mvn -B -DskipTests install

    # follows https://medium.com/ai2-blog/python-caching-in-github-actions-e9452698e98d
    - name: Loading Python & dependencies from cache
      if: matrix.os != 'self-hosted'
      uses: actions/cache@v4
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-test.txt') }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip pytest
        #install this software and dependencies
        pip install --timeout=120 .

    # we run these quickly, to fail-fast before installing all heavier test dependencies, including transformers, cuda, torch etc.
    - name: Flash unit tests
      env:
        TERRIER_VERSION: ${{ matrix.terrier }}
      run: |
        pytest -p no:faulthandler tests/test_flash.py
        # Hide underlying Jnius problem by disabling faulthandler: https://github.com/pytest-dev/pytest/issues/7634

    - name: Install test Python dependencies
      run: |
        pip install --upgrade --upgrade-strategy eager -r requirements-test.txt

    - name: All unit tests
      env:
        TERRIER_VERSION: ${{ matrix.terrier }}
      run: |
        pytest --durations=20 -p no:faulthandler
